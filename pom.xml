<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.6.RELEASE</version>
    </parent>

    <groupId>app.myoss.cloud</groupId>
    <artifactId>spring-boot-parent</artifactId>
    <version>2.0.9.RELEASE</version>
    <packaging>pom</packaging>

    <name>spring-boot-parent</name>
    <description>myoss open source project, Spring Boot Project parent pom</description>
    <url>https://github.com/myoss-cloud/spring-boot-parent</url>
    <inceptionYear>2018</inceptionYear>

    <scm>
        <url>https://github.com/myoss-cloud/spring-boot-parent</url>
        <connection>scm:git:https://github.com/myoss-cloud/spring-boot-parent.git</connection>
    </scm>

    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Jerry.Chen</name>
            <email>jerry.work@aliyun.com</email>
            <organizationUrl>https://github.com/myoss-cloud</organizationUrl>
            <url>https://github.com/myoss</url>
        </developer>
    </developers>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- myoss cloud -->
        <myoss-cloud.java-code-style.version>2.0.2.RELEASE</myoss-cloud.java-code-style.version>
        <myoss-starter-projects.version>2.0.4.RELEASE</myoss-starter-projects.version>
        <myoss-mybatis.version>2.0.3.RELEASE</myoss-mybatis.version>
        <myoss-mybatis-generator.version>2.0.2.RELEASE</myoss-mybatis-generator.version>
        <!-- myoss cloud -->

        <!-- myoss app -->
        <myoss-wechat-starter.version>1.0.6.RELEASE</myoss-wechat-starter.version>
        <!-- myoss app -->

        <!-- third party -->
        <fastjson.version>1.2.49</fastjson.version>
        <guava.version>26.0-jre</guava.version>
        <commons-text.version>1.3</commons-text.version>
        <squareup-okhttp3.version>3.11.0</squareup-okhttp3.version>
        <!-- third party -->

        <!-- third party -->
        <spring-boot.version>2.0.4.RELEASE</spring-boot.version>
        <spring-cloud-dependencies.version>Finchley.SR2</spring-cloud-dependencies.version>
        <puppycrawl-tools-checkstyle.version>8.10</puppycrawl-tools-checkstyle.version>
        <spring-javaformat-checkstyle.version>0.0.5</spring-javaformat-checkstyle.version>
        <mybatis.version>3.4.6</mybatis.version>
        <mybatis-spring.version>1.3.2</mybatis-spring.version>
        <!-- third party -->
    </properties>

    <dependencies>
        <!-- spring boot start -->
        <dependency>
            <!--
                support to generate spring-configuration-metadata.json when package jar,
                generate your own configuration meta-data file from items annotated with @ConfigurationProperties
             -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- spring boot end -->

        <!-- spring cloud dependency start -->
        <!-- spring cloud dependency end -->

        <!-- utils start -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <!-- utils end -->

        <!-- test start -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <optional>true</optional>
        </dependency>
        <!-- test end -->
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- myoss cloud dependencies start -->
            <dependency>
                <groupId>app.myoss.cloud.boot</groupId>
                <artifactId>myoss-starter-projects</artifactId>
                <version>${myoss-starter-projects.version}</version>
            </dependency>
            <dependency>
                <groupId>app.myoss.cloud.boot</groupId>
                <artifactId>myoss-starter-core</artifactId>
                <version>${myoss-starter-projects.version}</version>
            </dependency>
            <dependency>
                <groupId>app.myoss.cloud.boot</groupId>
                <artifactId>myoss-starter-apm</artifactId>
                <version>${myoss-starter-projects.version}</version>
            </dependency>
            <dependency>
                <groupId>app.myoss.cloud.boot</groupId>
                <artifactId>myoss-starter-cache</artifactId>
                <version>${myoss-starter-projects.version}</version>
            </dependency>
            <dependency>
                <groupId>app.myoss.cloud.boot</groupId>
                <artifactId>myoss-starter-web</artifactId>
                <version>${myoss-starter-projects.version}</version>
            </dependency>
            <dependency>
                <groupId>app.myoss.cloud.mybatis</groupId>
                <artifactId>myoss-mybatis</artifactId>
                <version>${myoss-mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>app.myoss.cloud.mybatis</groupId>
                <artifactId>myoss-mybatis-generator</artifactId>
                <version>${myoss-mybatis-generator.version}</version>
            </dependency>
            <!-- myoss cloud dependencies end -->

            <!-- myoss app dependencies begin -->
            <dependency>
                <groupId>app.myoss.wechat</groupId>
                <artifactId>wechat-starter-core</artifactId>
                <version>${myoss-wechat-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>app.myoss.wechat</groupId>
                <artifactId>wechat-starter-mp</artifactId>
                <version>${myoss-wechat-starter.version}</version>
            </dependency>
            <!-- myoss app dependencies end -->

            <!-- utils start -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <!-- 替换 commons-lang3 中的部分过时依赖 -->
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons-text.version}</version>
            </dependency>
            <!-- utils end -->

            <!-- http client start -->
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${squareup-okhttp3.version}</version>
            </dependency>
            <!-- http client end -->

            <!-- mybatis begin -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis-spring.version}</version>
            </dependency>
            <!-- mybatis end -->
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-other-resources</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/classes</outputDirectory>
                            <resources>
                                <resource>
                                    <!-- 先复制父项目中的 README/LICENSE 文件，再用自己项目中的 README/LICENSE 文件覆盖（如果有的话） -->
                                    <directory>../</directory>
                                    <includes>
                                        <include>README.md</include>
                                        <include>readme.md</include>
                                        <include>LICENSE</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>${basedir}</directory>
                                    <includes>
                                        <include>README.md</include>
                                        <include>readme.md</include>
                                        <include>LICENSE</include>
                                    </includes>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- generate sources code attachments -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- generate javadoc attachments -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadoc</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <charset>UTF-8</charset>
                    <encoding>UTF-8</encoding>
                    <docencoding>UTF-8</docencoding>
                    <failOnError>true</failOnError>
                </configuration>
            </plugin>
            <plugin>
                <!-- GPG Signed Components -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- 检查代码格式 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.0.0</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${puppycrawl-tools-checkstyle.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>app.myoss.cloud.codestyle</groupId>
                        <artifactId>code-format-checkstyle</artifactId>
                        <version>${myoss-cloud.java-code-style.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>io.spring.javaformat</groupId>
                        <artifactId>spring-javaformat-checkstyle</artifactId>
                        <version>${spring-javaformat-checkstyle.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>checkstyle-validation</id>
                        <phase>validate</phase>
                        <configuration>
                            <skip>${disable.checks}</skip>
                            <configLocation>checkstyle/checkstyle.xml</configLocation>
                            <suppressionsLocation>checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
                            <headerLocation>checkstyle/checkstyle-header.txt</headerLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>oss-nexus-auto-releases</id>
            <build>
                <plugins>
                    <plugin>
                        <!-- Nexus Staging Plugin, auto deploy close and release -->
                        <!-- 该插件允许你方便的将组件发布到Maven中央仓库, 而不需要登录OSSRH网站自己去Close然后又Release -->
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.8</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>nexus-releases</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>